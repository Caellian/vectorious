{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","matrix.js","vectorious.js","vector.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Matrix","self","this","rows","slice","arguments","forEach","argument","Vector","push","zeros","construct","prototype","add","matrix","map","vector","index","subtract","scale","scalar","j","row","undefined","ones","multiply","copy","sum","k","get","set","transpose","gauss","argmax","max","Math","min","abs","identity","size","diag","elements","trace","values","reduce","previous","current","equals","value","toString","join","./vector.js",2,"Function","args","object","Object","create","apply","normalize","count","Array","Number","valueOf","dot","magnitude","sqrt","angle","acos",3,"./matrix.js"],"mappings":"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","file":"vectorious.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\n  'use strict';\n  \n  var Vector = require('./vector.js');\n  \n  function Matrix() {\n    var self = this;\n    self.rows = [];\n    \n    [].slice.call(arguments, 0)\n      .forEach(function(argument) {\n        var i;\n        if(argument instanceof Vector) {\n          self.rows.push(argument);\n        } else if(typeof argument === 'number') {\n          for(i = 0; i < argument; i++)\n            self.rows.push(new Vector().zeros(argument));\n        } else if(typeof argument === 'object') {\n          for(i = 0; i < argument.length; i++)\n            self.rows.push(Vector.construct(argument[i]));\n        }\n      });\n  }\n  \n  /****************************\\\n  | Methods returning matrices |\n  \\****************************/\n  Matrix.prototype.add = function(matrix) {\n    return Matrix.construct(this.rows.map(function(vector, index) {\n      return vector.add(matrix.rows[index]);\n    }));\n  };\n  \n  Matrix.prototype.subtract = function(matrix) {\n    return Matrix.construct(this.rows.map(function(vector, index) {\n      return vector.subtract(matrix.rows[index]);\n    }));\n  };\n  \n  Matrix.prototype.scale = function(scalar) {\n    return Matrix.construct(this.rows.map(function(vector) {\n      return vector.scale(scalar);\n    }));\n  };\n  \n  Matrix.prototype.zeros = function(i, j) {\n    for(var row = 0; row < i; row++)\n      if(this.rows[row] === undefined)\n        this.rows[row] = new Vector().zeros(j);\n    \n    return this;\n  };\n  \n  Matrix.prototype.ones = function(i, j) {\n    for(var row = 0; row < i; row++)\n      if(this.rows[row] === undefined)\n        this.rows[row] = new Vector().ones(j);\n    \n    return this;\n  };\n  \n  Matrix.prototype.multiply = function(matrix) {\n    if(this.rows[0].length !== matrix.rows.length)\n      throw 'Error: sizes do not match!';\n    \n    var copy = new Matrix().zeros(this.rows.length, matrix.rows[0].length);\n    \n    var sum = 0;\n    for(var i = 0; i < this.rows.length; i++) {\n      for(var j = 0; j < matrix.rows[0].length; j++) {\n        sum = 0;\n        for(var k = 0; k < this.rows[0].length; k++)\n          sum += this.get(i, k) * matrix.get(k, j);\n        \n        copy.set(i, j, sum);\n      }\n    }\n    \n    return copy;\n  };\n  \n  Matrix.prototype.transpose = function() {\n    var copy = new Matrix().zeros(this.rows[0].length, this.rows.length);\n    var i, j;\n    for(i = 0; i < this.rows.length; i++)\n      for(j = 0; j < this.rows[0].length; j++)\n        copy.set(j, i, this.get(i, j));\n    \n    return copy;\n  };\n  \n  Matrix.prototype.gauss = function() {\n    var copy,\n        argmax,\n        max,\n        i, j, k;\n    for(k = 0; k < Math.min(this.rows.length, this.rows[0].length); k++) {\n      argmax = 0;\n      max = 0;\n      \n      for(i = k; i < this.rows.length; i++) {\n        copy = Math.abs(this.get(k, i));\n        if(copy > max) {\n          argmax = i;\n          max = copy;\n        }\n      }\n      \n      if(this.get(argmax, k) === 0)\n        throw 'Error: matrix is singular!';\n      \n      copy = this.rows[k];\n      this.rows[k] = this.rows[argmax];\n      this.rows[argmax] = copy;\n      \n      for(i = k + 1; i < this.rows.length; i++) {\n        for(j = k + 1; j < this.rows[0].length; j++)\n          this.set(i, j, this.get(i, j) - this.get(k, j) * (this.get(i, k) / this.get(k, k)));\n          \n        this.set(i, k, 0);\n      }\n    }\n    \n    return Matrix.construct(this.rows);\n  };\n  \n  Matrix.prototype.identity = function(size) {\n    var matrix = new Matrix().zeros(size, size),\n        i, j;\n    for(i = 0; i < size; i++)\n      for(j = 0; j < size; j++)\n        if(i === j)\n          matrix.set(i, j, 1);\n    \n    return matrix;\n  };\n  \n  /***************************\\\n  | Methods returning vectors |\n  \\***************************/\n  Matrix.prototype.diag = function() {\n    var elements = [],\n        i, j;\n    \n    for(i = 0; i < this.rows.length; i++)\n      for(j = 0; j < this.rows[0].length; j++)\n        if(i === j)\n          elements.push(this.get(i, j));\n    \n    return Vector.construct(elements);\n  };\n  \n  /***************************\\\n  | Methods returning scalars |\n  \\***************************/\n  Matrix.prototype.trace = function() {\n    return Matrix.construct(this.diag().values.reduce(function(previous, current) {\n      return previous + current;\n    }));\n  };\n  \n  /**********\\\n  | Equality |\n  \\**********/\n  Matrix.prototype.equals = function(matrix) {\n    return this.rows\n      .map(function(vector, index) {\n        return vector.equals(matrix.rows[index]);\n      })\n      .reduce(function(previous, current) {\n        return previous === current;\n      });\n  };\n      \n  /***********\\\n  | Get & set |\n  \\***********/\n  Matrix.prototype.get = function(i, j) {\n    return this.rows[i].get(j);\n  };\n      \n  Matrix.prototype.set = function(i, j, value) {\n    this.rows[i].set(j, value);\n    return this;\n  };\n  \n  /*********\\\n  | Display |\n  \\*********/\n  Matrix.prototype.toString = function() {\n    return '[' + this.rows.map(function(vector) {\n      return vector.toString();\n    }).join(', \\n') + ']';\n  };\n  \n  module.exports = Matrix;\n})();","(function() {\n  var Matrix = require('./matrix.js'),\n      Vector = require('./vector.js');\n  \n  module.exports.Matrix = Matrix;\n  module.exports.Vector = Vector;\n})();","(function() {\n  'use strict';\n  \n  function Vector() {\n    var self = this;\n    self.values = [];\n    self.length = 0;\n    \n    [].slice.call(arguments, 0)\n      .forEach(function(argument) {\n        self.values.push(argument);\n        self.length++;\n      });\n  }\n  \n  // ([a, b, c]) => (a, b, c)\n  Function.prototype.construct = function(args) {\n    var object = Object.create(this.prototype);\n    this.apply(object, args);\n    return object;\n  };\n  \n  /***************************\\\n  | Methods returning vectors |\n  \\***************************/\n  Vector.prototype.add = function(vector) {\n    if(this.length !== vector.length)\n      throw 'Error: sizes do not match!';\n    \n    return Vector.construct(this.values.map(function(value, index) {\n      return value + vector.values[index];\n    }));\n  };\n  \n  Vector.prototype.subtract = function(vector) {\n    if(this.length !== vector.length)\n      throw 'Error: sizes do not match!';\n    \n    return Vector.construct(this.values.map(function(value, index) {\n      return value - vector.values[index];\n    }));\n  };\n  \n  Vector.prototype.scale = function(scalar) {\n    return Vector.construct(this.values.map(function(value) {\n      return value * scalar;\n    }));\n  };\n  \n  Vector.prototype.normalize = function() {\n    return this.scale(1 / this.length);\n  };\n  \n  Vector.prototype.zeros = function(count) {\n    this.values = Array\n      .apply(null, new Array(count))\n      .map(Number.prototype.valueOf, 0);\n    this.length = count;\n    return this;\n  };\n  \n  Vector.prototype.ones = function(count) {\n    this.values = Array\n      .apply(null, new Array(count))\n      .map(Number.prototype.valueOf, 1);\n    this.length = count;\n    return this;\n  };\n  \n  /***************************\\\n  | Methods returning scalars |\n  \\***************************/\n  Vector.prototype.dot = function(vector) {\n    if(this.length !== vector.length)\n      throw 'Error: sizes do not match!';\n    \n    return this.values\n      .map(function(value, index) {\n        return value * vector.values[index];\n      })\n      .reduce(function(previous, current) {\n        return previous + current;\n      });\n  };\n  \n  Vector.prototype.magnitude = function() {\n    return Math.sqrt(this.values\n      .map(function(value) {\n        return value * value;\n      })\n      .reduce(function(previous, current) {\n        return previous + current;\n      })\n    );\n  };\n  \n  Vector.prototype.angle = function(vector) {\n    return Math.acos(this.dot(vector) / this.magnitude() * vector.magnitude());\n  };\n  \n  /**********\\\n  | Equality |\n  \\**********/\n  Vector.prototype.equals = function(vector) {\n    if(this.length !== vector.length)\n      return false;\n    \n    return this.values\n      .map(function(value, index) {\n        return value === vector.values[index];\n      })\n      .reduce(function(previous, current) {\n        return previous === current;\n      });\n  };\n  \n  /***********\\\n  | Get & set |\n  \\***********/\n  Vector.prototype.get = function(index) {\n    return this.values[index];\n  };\n  \n  Vector.prototype.set = function(index, value) {\n    this.values[index] = value;\n    return this;\n  };\n  \n  /*********\\\n  | Display |\n  \\*********/\n  Vector.prototype.toString = function() {\n    return '[' + this.values.join(', ') + ']';\n  };\n  \n  module.exports = Vector;\n})();"],"sourceRoot":"/source/"}